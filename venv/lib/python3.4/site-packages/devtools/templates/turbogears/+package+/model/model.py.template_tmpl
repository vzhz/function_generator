# -*- coding: utf-8 -*-
"""{{start_braces}}target.capitalize(){{end_braces}} model module."""

{{if sqlalchemy}}
from sqlalchemy import *
from sqlalchemy import Table, ForeignKey, Column
from sqlalchemy.types import Integer, Unicode, DateTime, LargeBinary
from sqlalchemy.orm import relationship, backref

from {{package}}.model import DeclarativeBase, metadata, DBSession


class {{start_braces}}target.capitalize(){{end_braces}}(DeclarativeBase):
    __tablename__ = '{{start_braces}}target.lower(){{end_braces}}s'

    uid = Column(Integer, primary_key=True)
    data = Column(Unicode(255), nullable=False)

    user_id = Column(Integer, ForeignKey('tg_user.user_id'), index=True)
    user = relationship('User', uselist=False,
                        backref=backref('{{start_braces}}target.lower(){{end_braces}}s',
                                        cascade='all, delete-orphan'))

{{else}}
from ming import schema as s
from ming.odm import FieldProperty, ForeignIdProperty, RelationProperty
from ming.odm.declarative import MappedClass

from {{package}}.model import DBSession


class {{start_braces}}target.capitalize(){{end_braces}}(MappedClass):
    class __mongometa__:
        session = DBSession
        name = '{{start_braces}}target.lower(){{end_braces}}s'
        indexes = [
            ('_user',),
        ]

    _id = FieldProperty(s.ObjectId)

    name = FieldProperty(s.String, required=False)

    _user = ForeignIdProperty('User')
    user = RelationProperty('User')
{{endif}}


__all__ = ['{{start_braces}}target.capitalize(){{end_braces}}']
